// Code generated by protoc-gen-go.
// source: terminator.proto
// DO NOT EDIT!

/*
Package grpc_browser_compat is a generated protocol buffer package.

It is generated from these files:
	terminator.proto

It has these top-level messages:
	BrowserTerminator
*/
package grpc_browser_compat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// BrowserTerminator is the last message in a DATA stream of HTTP2, or the last chunk of the HTTP1.1 response.
// It's because browsers cannot access the trailing headers of a response, and as such it is crucial to add gRPC
// status information at the end of the data stream.
// The last chunk is prefixed with [0xDEADBEEF][4 bytes length of BrowserTerminator] and the Browser terminator proto.
type BrowserTerminator struct {
	StatusCode int32                               `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	StatusDesc string                              `protobuf:"bytes,2,opt,name=status_desc,json=statusDesc" json:"status_desc,omitempty"`
	Trailer    []*BrowserTerminator_TrailingHeader `protobuf:"bytes,3,rep,name=trailer" json:"trailer,omitempty"`
}

func (m *BrowserTerminator) Reset()                    { *m = BrowserTerminator{} }
func (m *BrowserTerminator) String() string            { return proto.CompactTextString(m) }
func (*BrowserTerminator) ProtoMessage()               {}
func (*BrowserTerminator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BrowserTerminator) GetTrailer() []*BrowserTerminator_TrailingHeader {
	if m != nil {
		return m.Trailer
	}
	return nil
}

type BrowserTerminator_TrailingHeader struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *BrowserTerminator_TrailingHeader) Reset()         { *m = BrowserTerminator_TrailingHeader{} }
func (m *BrowserTerminator_TrailingHeader) String() string { return proto.CompactTextString(m) }
func (*BrowserTerminator_TrailingHeader) ProtoMessage()    {}
func (*BrowserTerminator_TrailingHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func init() {
	proto.RegisterType((*BrowserTerminator)(nil), "grpc.experimental.browser_compat.BrowserTerminator")
	proto.RegisterType((*BrowserTerminator_TrailingHeader)(nil), "grpc.experimental.browser_compat.BrowserTerminator.TrailingHeader")
}

func init() { proto.RegisterFile("terminator.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x49, 0x2d, 0xca,
	0xcd, 0xcc, 0x4b, 0x2c, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0x48, 0x2f,
	0x2a, 0x48, 0xd6, 0x4b, 0xad, 0x28, 0x48, 0x2d, 0xca, 0xcc, 0x4d, 0xcd, 0x2b, 0x49, 0xcc, 0xd1,
	0x4b, 0x2a, 0xca, 0x2f, 0x2f, 0x4e, 0x2d, 0x8a, 0x4f, 0xce, 0xcf, 0x2d, 0x48, 0x2c, 0x51, 0x7a,
	0xcf, 0xc8, 0x25, 0xe8, 0x04, 0x11, 0x0a, 0x81, 0xeb, 0x16, 0x92, 0xe7, 0xe2, 0x2e, 0x2e, 0x49,
	0x2c, 0x29, 0x2d, 0x06, 0x2a, 0x4b, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0xe2, 0x82,
	0x08, 0x39, 0x03, 0x45, 0x90, 0x14, 0xa4, 0xa4, 0x16, 0x27, 0x4b, 0x30, 0x01, 0x15, 0x70, 0xc2,
	0x14, 0xb8, 0x00, 0x45, 0x84, 0x62, 0xb8, 0xd8, 0x4b, 0x8a, 0x12, 0x33, 0x73, 0x52, 0x8b, 0x24,
	0x98, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0x9c, 0xf4, 0x08, 0xb9, 0x45, 0x0f, 0xc3, 0x1d, 0x7a, 0x21,
	0x20, 0x23, 0x32, 0xf3, 0xd2, 0x3d, 0x52, 0x13, 0x53, 0x52, 0x8b, 0x82, 0x60, 0x46, 0x4a, 0x59,
	0x71, 0xf1, 0xa1, 0x4a, 0x09, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0x42, 0x9c, 0xca, 0x19, 0x04,
	0x66, 0x0b, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x42, 0x9d, 0x07, 0xe1, 0x38, 0x89,
	0x46, 0x09, 0x83, 0x5c, 0x12, 0x8f, 0x6a, 0x79, 0x12, 0x1b, 0x38, 0xc4, 0x8c, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xc9, 0x01, 0xc2, 0x7f, 0x45, 0x01, 0x00, 0x00,
}
